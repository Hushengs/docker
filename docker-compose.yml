version: '3'
services:
    golang:
        build: 
            context: ./golang/ubuntu
            dockerfile: Dockerfile
        container_name: golang
        hostname: golang
        networks: 
            webserver:
                ipv4_address: 172.52.1.2
        links:
            - redis
            - mysql
            - mongodb
        volumes: 
            - "./admin:/wwwroot/admin"
        tty: true
    nginx:
        build: 
            context: ./nginx
            dockerfile: Dockerfile
        container_name: nginx
        hostname: nginx
        networks: 
            webserver:
                ipv4_address: 172.52.1.3
        links:
            - golang
        ports:
            - "80:80"
            - "8888:8888"
        # depends_on:
        #     - golang
        volumes:
            - "./admin:/wwwroot/admin"
            - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./nginx/conf:/etc/nginx/conf"
    redis:
        build: 
            context: ./redis
            dockerfile: Dockerfile
        container_name: redis
        hostname: redis
        logging:
            driver: none
        ports:
            - "16379:6379"
        networks: 
            webserver:
                ipv4_address: 172.52.1.4
        volumes:
            - ./redis/conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
            - ./redis/data/redis/:/data
    mongodb:
        build: 
            context: ./mongodb
            dockerfile: Dockerfile
        container_name: mongodb
        hostname: mongodb
        logging:
            driver: none
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: mongodb
        ports:
            - "27017:27017"
        networks:
            webserver:
                ipv4_address: 172.52.1.5
    mysql:
        build: 
            context: ./mysql
            dockerfile: Dockerfile
        container_name: mysql
        hostname: mysql
        networks: 
            webserver:
                ipv4_address: 172.52.1.6
        ports:
            - "13066:3306"
        command: --default-authentication-plugin=mysql_native_password
        #restart: always
        environment:
            MYSQL_ROOT_PASSWORD: mysql
        volumes:
            - "./mysql/data/:/var/lib/mysql/"
networks: 
    webserver:
        driver: bridge
        ipam:
          driver: default
          config:
            - subnet: "172.52.1.0/24"

#docker stop $(docker ps -q) & docker rm $(docker ps -aq)
